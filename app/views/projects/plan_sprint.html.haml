-## Cotopaxi | Scrum Management Tool
-## Copyright (C) 2012  Patricio Cano
-##
-## This program is free software: you can redistribute it and/or modify
-## it under the terms of the GNU General Public License as published by
-## the Free Software Foundation, either version 3 of the License, or
-## any later version.
-##
-## This program is distributed in the hope that it will be useful,
-## but WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-## GNU General Public License for more details.
-## You should have received a copy of the GNU General Public License
-## along with this program.  If not, see <http://www.gnu.org/licenses/>.
%legend{id: "project_id", name: @project.id}
  Plan sprint for project: #{@project.name}
  %small Sprint number: #{@sprint.number}
  %span{class: "label label-#{@sprint.set_status_label}"}
    =@sprint.state.humanize
  -if @sprint.finish_date
    -if Time.now < @sprint.finish_date
      %br/
      %small Sprint ends on #{@sprint.finish_date}
    -else
      %br/
      %small Sprint ended on #{@sprint.finish_date}



.row
  .span6
    %h5 Product backlog:
    %ul#backDropZone{style: "list-style-type: none;", name: @sprint.id}
      = render 'drop_zone'
      -@project.features.by_priority.each do |feature|
        -if feature.sprint.nil? #_id != @sprint.id
          %li
            .cubic.draggable{id: feature.id, name: 'droppedL'}
              %h3{class: "popover-title"}= feature.name
              .popover-content
                %p= feature.description

  .span6
    %h5 Current Sprint backlog:
    %ul#dropZone{style: "list-style-type: none;", name: @sprint.id}
      = render 'drop_zone'
      -@sprint.features.by_priority.each do |feature|
        %li
          .cubic.draggable{id: feature.id, name: 'droppedR'}
            %h3{class: "popover-title"}= feature.name
            .popover-content
              %p= feature.description

%br/
= link_to 'Back', project_path(@project), class: 'btn', type:'button'
= link_to "#{@sprint.set_state_change_button}", url_for(controller: :sprints, action: :update, project_id: @project.id, id: @sprint.id, sprint: { state_event: @sprint.set_state_transition }), class: "btn btn-success", type:'button', method: :put
